?start: expr
      | statement*
      | var
      | bool
      | condition
      | if*

?expr: STRING            -> string
     | NUMBER            -> number
     | NUMBER "+" NUMBER -> add
     | NUMBER "-" NUMBER -> sub
     | NUMBER "*" NUMBER -> mul
     | NUMBER "/" NUMBER -> div
     | STRING "+" STRING -> str_add

?bool: TRUE              -> true
     | FALSE             -> false

?condition: expr "==" bool -> bool_comparison
          | expr "==" expr -> expr_comparison

?statement: "print" "(" expr ")" ";"  -> print_statement
          | "input" "(" expr ")" ";"  -> input_statement

?if : "if" condition "{" statement "}" -> if_statement

?var: NAME "=" expr      -> assign_var
    | NAME               -> get_var


TRUE: "true"
FALSE: "false"


%import common.ESCAPED_STRING -> STRING 
%import common.NUMBER
%import common.CNAME -> NAME
%declare _INDENT _DEDENT
%import common.WS_INLINE
%ignore WS_INLINE
%import common.NEWLINE -> _NL
%ignore _NL