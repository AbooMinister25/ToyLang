?start: expr
      | statement
      | var
      | bool
      | condition

?expr: STRING            -> string
     | NUMBER            -> number
     | NUMBER "+" NUMBER -> add
     | NUMBER "-" NUMBER -> sub
     | NUMBER "*" NUMBER -> mul
     | NUMBER "/" NUMBER -> div
     | STRING "+" STRING -> str_add
     | NAME              -> get_var


?var: NAME "=" expr      -> assign_var

?bool: TRUE              -> true
     | FALSE             -> false

?condition: expr "==" bool
          | expr "==" expr

?statement: "print" "(" expr ")" ";" -> print_statement
          | "input" "(" expr ")" ";" -> input_statement
          | "if" condition "{" expr "}" -> if_statement


TRUE: "true"
FALSE: "false"

%import common.ESCAPED_STRING -> STRING 
%import common.NUMBER
%import common.CNAME -> NAME
%import common.WS_INLINE
%ignore WS_INLINE