?start: expr
      | statement
      

?expr: STRING            -> string
     | NUMBER            -> number
     | NUMBER "+" NUMBER -> add
     | NUMBER "-" NUMBER -> sub
     | NUMBER "*" NUMBER -> mul
     | NUMBER "/" NUMBER -> div
     | STRING "+" STRING -> str_add

?statement: "print" "(" expr ")" ";" -> print_statement
          | "input" "(" expr ")" ";" -> input_statement

%import common.ESCAPED_STRING -> STRING 
%import common.NUMBER
%import common.WS_INLINE
%ignore WS_INLINE